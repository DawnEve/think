weibo项目
----------------------------
--微博信息表
CREATE TABLE `think_weibo` (
	`id` int(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `uid` int(20) NOT NULL,
  `content` text DEFAULT NULL,
  `add_time` varchar(30) DEFAULT NULL,
  `cid` int(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--微博分类表
CREATE TABLE `think_weibo_category` (
  `id` int(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `name` text DEFAULT NULL,
  `pid` int(10)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into think_weibo_category(id,name,pid) values(1,'雅思',0);
insert into think_weibo_category(name,pid) values('听力',1),('口语',1),('阅读',1),('写作',1);

mysql> select * from think_weibo_category;
+----+------+------+
| id | name | pid  |
+----+------+------+
|  1 | 雅思 |    0 |
|  2 | 听力 |    1 |
|  3 | 口语 |    1 |
|  4 | 阅读 |    1 |
|  5 | 写作 |    1 |
+----+------+------+
5 rows in set (0.00 sec)


0.1 构建了基本界面。发帖和删除功能，没有权限控制。和lofter域名偶联。
0.2 分类功能。分离js和css文件。
0.3 分类后的不能删除，也不显示删除按钮。分类前的显示删除按钮。

0.4 重构视图，加入 archive 字段和视图。 
	增加字段：alter table think_weibo add archive int(10);
	看该字段： select id,uid,archive from think_weibo;
	修改已经录音的： update think_weibo set archive =20160512 where id<45;
 
	第二期录音：update think_weibo set archive =20160514 where id in (88,45,46,47,48,51,52,54,56,59,60,61,62,63,64,65,68,69,77,78,79,85,86);


0.5 http://tp.dawneve.cc/weibo/index.html
增强了微博的url生成，模板中使用{:U("Weibo/index")}生成目录。

0.6 模板中无法使用{:U()}输出过于复杂的链接，比如后面带参数，且参数是数组变量，
解决办法：直接使用原生php。
<?php //实在解决不了引号问题了，就用原生php
      echo U('Weibo/index',array('tag'=>$vo[cid])); ?>
                        
                        
0.7 links数据定义在WeiboLogic中。
Logic层不经过数据库，直接返回数据。

===========================================
学习框架本身 on branch learn
>>L0.0.1 自定义标签
http://tp.dawneve.cc/Goods/tag2

>>L0.0.2 tp内置的Html标签库 
http://tp.dawneve.cc/Goods/tag3



 
===========================================
开发一个订货单管理系统

OrderV1.订货单表：
think_order 订单表
think_supplier 供应商

CREATE TABLE `think_order` (
  `order_id` int(10) NOT NULL AUTO_INCREMENT,
  `order_name` varchar(50) NOT NULL COMMENT '名字',
  `order_unit` varchar(5) DEFAULT '单位' COMMENT '单位',
  `order_quantity` int(10) NOT NULL DEFAULT 0 COMMENT '数量',
  `order_price` int(10) NOT NULL DEFAULT 0 COMMENT '单价',
  `order_note` text COMMENT '备注',
  `order_time` varchar(30) DEFAULT NULL COMMENT '订单时间',
  
  `add_time` varchar(30) DEFAULT NULL COMMENT '添加时间',
  `modi_time` varchar(30) DEFAULT NULL COMMENT '修改时间',
  `supplier_id` int(10) DEFAULT NULL COMMENT '供应商id',
  `order_status` int(10) DEFAULT NULL COMMENT '状态：0表示订货，1表示到货，2表示对账，3.表示报销过',
  PRIMARY KEY (`order_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

 

CREATE TABLE `think_supplier` (
  `supplier_id` int(10) NOT NULL AUTO_INCREMENT,
  `supplier_name` varchar(50) NOT NULL COMMENT '供应商名字',
  `supplier_url` text COMMENT '网址',
  `supplier_phone` varchar(25) DEFAULT NULL COMMENT '电话',
  `supplier_QQ` varchar(25) DEFAULT NULL COMMENT 'QQ',
  `supplier_email` varchar(25) DEFAULT NULL COMMENT 'email',
  `supplier_person` varchar(10) DEFAULT '暂无' COMMENT '联系人',
  PRIMARY KEY (`supplier_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

OrderV2.加入一个主界面。

OrderV3.问题：怎么计算购物车每行的小结价格？




